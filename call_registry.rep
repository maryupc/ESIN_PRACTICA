struct node_hash
{
       phone _k; // Clau
       node_hash *_seg;
       node_hash(const phone &k = phone(), node_hash *seg = nullptr) throw();
};
node_hash **_taula; // Taula amb punters a les llistes de phones
nat _M;             // Mida de la taula
nat _quants;        // Nº d’elements guardats al call_registry.

static long const MULT = 31415926;

static long h(nat k);
// Pre: Cert
// Post: Retorna un valor de dispersió entre 0 i LONG_MAX a partir de k

float factor_de_carrega();
// Pre: Cert
// Post: Retorna el factor de càrrega de la taula de dispersió

void redispersio();
// Pre: Cert
// Post: Redimensiona la taula de dispersió amb una mida el doble que
// l’anterior més un (_M passa a ser 2*_M+1)

static void delete_nodes(node_hash *p);
// Pre : Cert
// Post : elimina tots els nodes seguents de p amb p inclós.

static node_hash* copy_nodes(node_hash *p);
// Pre : Cert
// Post : Retorna un node copia del node p y tots els seus seguents.